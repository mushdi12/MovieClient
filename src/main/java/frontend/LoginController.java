package frontend;import client.basic.Messages;import dto.classes.Client;import dto.transmision.Shipment;import javafx.beans.binding.Bindings;import javafx.fxml.FXML;import javafx.fxml.FXMLLoader;import javafx.scene.Parent;import javafx.scene.Scene;import javafx.scene.control.*;import javafx.scene.image.ImageView;import javafx.scene.text.Text;import javafx.stage.Stage;import java.io.IOException;import java.net.URL;import java.util.ResourceBundle;import static client.brain.ClientCode.*;import static client.validation.HashPassword.gethashPassword;import static java.lang.System.out;public class LoginController {    @FXML    private ResourceBundle resources;    @FXML    private URL location;    @FXML    private ImageView front;    @FXML    private Text welcome;    @FXML    private Text field_name;    @FXML    private Text field_password;    @FXML    private TextField log_user_name;    @FXML    private PasswordField log_user_password;    @FXML    private Button login_button;    @FXML    private Button reg_button;    @FXML    private Button button;    @FXML    private Label error_field;    @FXML    private ChoiceBox<String> change;    public static String lang = "ENGLISH";    @FXML    void initialize() {        login_button.disableProperty().bind(                Bindings.createBooleanBinding(                        () -> log_user_name.getText().trim().isEmpty() || log_user_password.getText().trim().isEmpty(),                        log_user_name.textProperty(),                        log_user_password.textProperty()                )        );        change.getItems().addAll("ENGLISH", "RUSSIAN", "LIETUVIŠKAS", "Islandų");        switch (lang) {            case "LIETUVIŠKAS" -> {                ResourceBundle labels = ResourceBundle.getBundle("login_button_lt");                String buttonText = labels.getString("log");                login_button.setText(buttonText);                buttonText = labels.getString("reg");                reg_button.setText(buttonText);                buttonText = labels.getString("welc");                welcome.setText(buttonText);                buttonText = labels.getString("name");                field_name.setText(buttonText);                buttonText = labels.getString("password");                field_password.setText(buttonText);                lang = "LIETUVIŠKAS";            }            case "ENGLISH" -> {                ResourceBundle labels = ResourceBundle.getBundle("login_button_en");                String buttonText = labels.getString("log");                login_button.setText(buttonText);                buttonText = labels.getString("reg");                reg_button.setText(buttonText);                buttonText = labels.getString("welc");                welcome.setText(buttonText);                buttonText = labels.getString("name");                field_name.setText(buttonText);                buttonText = labels.getString("password");                field_password.setText(buttonText);                lang = "ENGLISH";            }            case "Islandų" -> {                ResourceBundle labels = ResourceBundle.getBundle("login_button_is");                String buttonText = labels.getString("log");                login_button.setText(buttonText);                buttonText = labels.getString("reg");                reg_button.setText(buttonText);                buttonText = labels.getString("welc");                welcome.setText(buttonText);                buttonText = labels.getString("name");                field_name.setText(buttonText);                buttonText = labels.getString("password");                field_password.setText(buttonText);                lang = "Islandų";            }            case "RUSSIAN" -> {                login_button.setText("ВОЙТИ");                reg_button.setText("Создать пользователя");                welcome.setText("Добро Пожаловать!");                field_name.setText("Ваше имя");                field_password.setText("Ваш пароль");                lang = "RUSSIAN";            }        }    }    @FXML    void goMain() {        this_client = new Client(log_user_name.getText(), gethashPassword(log_user_password.getText()));        Messages answer;        try {            send(channel, new Shipment(this_client, 1));            answer = printer(channel);            if (answer.getMessage().equals("Success")) {                //error_field.setText("");                out.println("You have successfully logged in!");                FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("main-window.fxml"));                Parent root = fxmlLoader.load();                Stage stage = (Stage) reg_button.getScene().getWindow();                stage.setScene(new Scene(root));                stage.show();            } else {                out.println(answer);                switch (lang) {                    case "LIETUVIŠKAS" -> {                        ResourceBundle labels = ResourceBundle.getBundle("login_button_lt");                        String buttonText = labels.getString("error_log");                        error_field.setText(buttonText);                        lang = "LIETUVIŠKAS";                    }                    case "ENGLISH" -> {                        ResourceBundle labels = ResourceBundle.getBundle("login_button_en");                        String buttonText = labels.getString("error_log");                        error_field.setText(buttonText);                        lang = "ENGLISH";                    }                    case "Islandų" -> {                        ResourceBundle labels = ResourceBundle.getBundle("login_button_is");                        String buttonText = labels.getString("error_log");                        error_field.setText(buttonText);                        lang = "Islandų";                    }                    case "RUSSIAN" -> {                        error_field.setText("Такого пользователя еще нет");                        lang = "RUSSIAN";                    }                }            }        } catch (IOException | ClassNotFoundException ex) {            out.println(ex.getMessage());        }    }    @FXML    void goReg() {        try {            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("reg-window.fxml"));            Parent root = fxmlLoader.load();            Stage stage = (Stage) reg_button.getScene().getWindow();            stage.setScene(new Scene(root));            stage.show();        } catch (IOException ex) {            throw new RuntimeException(ex);        }    }    @FXML    void changeL() {        switch (change.getValue()) {            case "LIETUVIŠKAS" -> {                ResourceBundle labels = ResourceBundle.getBundle("login_button_lt");                String buttonText = labels.getString("log");                login_button.setText(buttonText);                buttonText = labels.getString("reg");                reg_button.setText(buttonText);                buttonText = labels.getString("welc");                welcome.setText(buttonText);                buttonText = labels.getString("name");                field_name.setText(buttonText);                buttonText = labels.getString("password");                field_password.setText(buttonText);                lang = "LIETUVIŠKAS";            }            case "ENGLISH" -> {                ResourceBundle labels = ResourceBundle.getBundle("login_button_en");                String buttonText = labels.getString("log");                login_button.setText(buttonText);                buttonText = labels.getString("reg");                reg_button.setText(buttonText);                buttonText = labels.getString("welc");                welcome.setText(buttonText);                buttonText = labels.getString("name");                field_name.setText(buttonText);                buttonText = labels.getString("password");                field_password.setText(buttonText);                lang = "ENGLISH";            }            case "Islandų" -> {                ResourceBundle labels = ResourceBundle.getBundle("login_button_is");                String buttonText = labels.getString("log");                login_button.setText(buttonText);                buttonText = labels.getString("reg");                reg_button.setText(buttonText);                buttonText = labels.getString("welc");                welcome.setText(buttonText);                buttonText = labels.getString("name");                field_name.setText(buttonText);                buttonText = labels.getString("password");                field_password.setText(buttonText);                lang = "Islandų";            }            case "RUSSIAN" -> {                login_button.setText("ВОЙТИ");                reg_button.setText("Создать пользователя");                welcome.setText("Добро Пожаловать!");                field_name.setText("Ваше имя");                field_password.setText("Ваш пароль");                lang = "RUSSIAN";            }        }    }}